install.packages(rvest)
install.packages('rvest')
install.packages('httr')
library('dplyr')
library('rvest')
URL <- 'http://news.bbc.co.uk/2/hi/uk_news/politics/8044207.stm'
ExpensesTable <- URL %>% read_html() %>%
html_nodes('#expenses_table') %>%
html_table() %>%
as.data.frame
View('ExpensesTable')
head(ExpensesTable)[, 1:3]
base <- c("cat16_24", "25_34cat", "35_44catch",
"45_54Cat", "55_4fat$", 'colour', 'color')
grep('\bcat\b', base, ignore.case = T)
grep('cat', base, ignore.case = T)
grep('\wcat\w', base, ignore.case = T)
grep('\wcat', base, ignore.case = T)
URLmedals <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
as.data.frame()
MedalsTable <- URLmedals %>% read_html() %>%
html_node('medals-table_table') %>%
html_table() %>%
as.data.frame
MedalsTable <- URLmedals %>% read_html() %>%
html_node('.medals-table') %>%
html_table() %>%
as.data.frame
MedalsTable <- URLmedals %>% read_html() %>%
html_node('div.medals-table.medals-table') %>%
html_table() %>%
as.data.frame
MedalsTable <- URLmedals %>% read_html() %>%
html_node('medals-table_wrapper') %>%
html_table() %>%
as.data.frame
MedalsTable <- URLmedals %>% read_html() %>%
html_node('medals-table-bycountry-full') %>%
html_table() %>%
as.data.frame
?html_node
URLmedals <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
MedalsTable <- URLmedals %>% read_html() %>%
html_node(xpath='//*[@id="sport"]/div[2]/div[2]/div/div[1]/div/section/div[2]') %>%
html_table() %>%
as.data.frame
MedalsTable <- URLmedals %>% read_html() %>%
html_node(xpath='//*[@id="sport"]/div[2]/div[2]/div/div[1]/div/section') %>%
html_table() %>%
as.data.frame
URLmedals <- 'http://www.bbc.com/sport/winter-olympics/2014/medals/countries'
MedalsTable <- URLmedals %>% read_html() %>%
html_node(xpath='//*[@id="sport"]/div[2]/div[2]/div/div[1]/div/section/div[2]/table') %>%
html_table() %>%
as.data.frame
head(MedalsTable)
names(MedalsTable)
View(MedalsTable)
?columns
names(MedalsTable) <- c("Rank", "Country", "Gold", "Silver", "Bronze", "Total", "By sport")
View(MedalsTable)
?arrange
descending <- arrange(MedalsTable, desc(Total))
head(descending)
ascending <- arrange(MedalsTable,ascending)
descendingGold <- arrange(MedalsTable, desc(Gold))
head(descendingGold)
?rm
grep('\bcat', ignore.case = T)
grep('\bcat\b', ignore.case = T)
?grep
grep('\bcat\b',base, ignore.case = T)
grep('\w\cat',base, ignore.case = T)
grep('\wcat\w',base, ignore.case = T)
grep('\wcat',base, ignore.case = T)
grep(\wcat,base, ignore.case = T)
grep('\\wcat',base, ignore.case = T)
grep('cat', base, ignore.case = T)
grep('\\wcat\\w',base, ignore.case = T)
grep('\\Wcat\\W',base, ignore.case = T)
grep('\\bcat\\b',base, ignore.case = T)
grep('\\wcat',base, ignore.case = T)
grep('cat\\w',base, ignore.case = T)
grep('cat\\w|\\wcat',base, ignore.case = T)
grep('(cat)\\w|\\w(cat)',base, ignore.case = T)
grep('cat\w|\wcat',base, ignore.case = T)
grep('cat\\w',base, ignore.case = T)
grep('\\wcat',base, ignore.case = T)
grep('\\wcat\\w',base, ignore.case = T)
grep('cat', base, ignore.case = T, fixed = T)
grep('cat', base, fixed = T)
grep('\\wcat\\w',base, ignore.case = T)
?blm
?glm
# deterministic (the model above) + stochastic, e.g. mdl1 <- y ~ x1 + x2, family = binomial, data = whatever
install.packages(stargazer)
install.packages("stargzer")
install.packages("stargazer")
library("dplyer","ggplot2")
library(dplyer,ggplot2)
library(ggplot2)
install.packages("dplyr")
library(dplyr)
data("mtcars")
install.packages(devtools)
install.packages("devtools")
summary(mtcars)
stat.desc(mtcars)
library(pastecs)
stat.desc(mtcars)
View("mtcars")
View(mtcars)
LM1 <- glm(mpg ~ wt, data = mtcars, family = "Binomial")
LM1 <- glm(mpg ~ wt, data = mtcars, family = "binomial")
?glm
?lm
LM1 <- lm(mpg ~ wt, data = mtcars)
LM2 <- lm(mpg ~ wt + disp, data = mtcars)
lm(mpg ~ wt + disp + am, data = mtcars)
LM3 <- lm(mpg ~ wt + disp + am, data = mtcars)
labels <- c("MPG", "Cylinders", "Displacement", "Horsepower", "Ratio", "Weight", "Qtr Mile", "Engine", "Transmission", "Gears", "Carburetors")
digits = 2, type = 'html')
stargazer::stargazer(LM1, LM2, LM3, covariate.labels = labels,
title = 'Regression Estimates of MPG Factors',
digits = 2, type = 'html')
```
``` {r regression table, }
labels <- c("MPG", "Cylinders", "Displacement", "Horsepower", "Ratio", "Weight", "Qtr Mile", "Engine", "Transmission", "Gears", "Carburetors", '(Intercept)')
# MPG regressions
table1 <- stargazer::stargazer(LM1, LM2, LM3, covariate.labels = labels,
title = 'Regression Estimates of MPG Factors',
digits = 2, type = 'html')
?wc
?wordcount
library(dplyr)
library(httr)
library(xlsx)
install.packages(xlsx)
install.packages('xlsx')
library(ggplot2)
read.xlsx('~/Test/02Bundeslaender.xls')
library(xlsx)
library(xlsx)
find.java()
library(rjava)
?remove.packages
remove.packages(xlsx)
remove.packages('xlsx')
install.packages('rjava')
yes
install.packages('rJava')
install.packages('xlsx')
library(xlsx)
library(xlsx)
?remove.packages('xlsx')
remove.packages('xlsx')
remove.packages('rJava')
library(dplyr)
library(httr)
library(xlsx)
library(ggplot2)
library(tidyr)
library(repmis)
library(rio)
library(rvest)
setwd()
URLnrg <- 'http://www.lanuv.nrw.de/liki/index.php?indikator=608&aufzu=1&mode=indi'
messynrgprime <- read.xlsx('~/GitHub/Climate-Happiness/Data/export_land_primary.xlsx', 1, startRow = 4, endRow = 21)
messynrgelec <- read.xlsx('~/GitHub/Climate-Happiness/Data/export_land_strom.xlsx', 1, startRow = 4, endRow = 21)
NAs <- messynrgelec == "K.D."
is.na(messynrgelec)[NAs] <- TRUE
View(messynrgelec)
for(i in c(2:25)){messynrgelec[,i] <- as.numeric(messynrgelec[,i], digits = 3)}
View(messynrgelec)
?round
library(dplyr)
library(httr)
library(xlsx)
library(ggplot2)
library(tidyr)
library(repmis)
library(rio)
library(rvest)
messynrgprime <- read.xlsx('~/GitHub/Climate-Happiness/Data/export_land_primary.xlsx', 1, startRow = 4, endRow = 21)
messynrgelec <- read.xlsx('~/GitHub/Climate-Happiness/Data/export_land_strom.xlsx', 1, startRow = 4, endRow = 21)
NAs <- messynrgelec == "K.D."
is.na(messynrgelec)[NAs] <- TRUE
for(i in c(2:25)){messynrgelec[,i] <- as.numeric(messynrgelec[,i], digits = 5)}
View(messynrgelec)
?transform
for(i in c(2:25)){transform(messynrgelec, i =  as.numeric(messynrgelec[,i], digits = 5)}
for(i in c(2:25)){transform(messynrgelec$[i] =  as.numeric(messynrgelec$[i], digits = 5)}
for(i in c(2:25)){transform(messynrgelec$[,i] =  as.numeric(messynrgelec$[,i], digits = 5)}
transform(messynrgelec$2 =  as.numeric(messynrgelec$2, digits = 5)
transform(messynrgelec =  as.numeric(messynrgelec), digits = 5)
remove(i)
is.numeric(messynrgelec) <- TRUE
as.numeric(messynrgelec) <- TRUE
transform(messynrgelec, c(2:25) = as.numeric(messynrgelec$c(2:25), digits = 5)
transform(messynrgelec, c(2:25), as.numeric(messynrgelec$c(2:25), digits = 5)
transform(messynrgelec, c(2:25), as.numeric(messynrgelec$c(2:25), digits = 5))
transform(messynrgelec, c(2:25), as.numeric(), digits = 5))
transform(messynrgelec, c(2:25), as.numeric(), digits = 5)
transform(messynrgelec$2, as.numeric(), digits = 5)
transform(messynrgelec$X1990, as.numeric(), digits = 5)
transform(messynrgelec$x1990 = as.numeric(messynrgelec$X1990), digits = 5)
transform(messynrgelec, X1990 = as.numeric(X1990), digits = 5)
library(dplyr)
library(httr)
library(xlsx)
library(ggplot2)
library(tidyr)
library(repmis)
library(rio)
library(rvest)
library(dplyr)
messynrgprime <- read.xlsx('~/GitHub/Climate-Happiness/Data/export_land_primary.xlsx', 1, startRow = 4, endRow = 21)
messynrgelec <- read.xlsx('~/GitHub/Climate-Happiness/Data/export_land_strom.xlsx', 1, startRow = 4, endRow = 21)
NAs <- messynrgelec == "K.D."
is.na(messynrgelec)[NAs] <- TRUE
transform(messynrgelec, X1990 = as.numeric(X1990), digits = 5)
for (i in c(2:25)) transform(messynrgelec, [,i] = as.numeric([, i]), digits = 5))
?read.xlsx
messynrgprime <- read.xlsx2('~/GitHub/Climate-Happiness/Data/export_land_primary.xlsx', 1, startRow = 4, endRow = 21, colClasses = c(rep('numeric', 2:25)))
messynrgprime <- read.xlsx2('~/GitHub/Climate-Happiness/Data/export_land_primary.xlsx', 1, startRow = 4, endRow = 21, colClasses = c(rep('character', x) rep('numeric', ncol(messynrgprime)-x+1)))
messynrgprime <- read.xlsx2('~/GitHub/Climate-Happiness/Data/export_land_primary.xlsx', 1, startRow = 4, endRow = 21, colClasses = c(rep('character', x) rep('numeric', ncol(messynrgprime)-(x+1)))
messynrgprime <- read.xlsx2('~/GitHub/Climate-Happiness/Data/export_land_primary.xlsx', 1, startRow = 4, endRow = 21, colClasses = c(rep('character', x), rep('numeric', ncol(messynrgprime)-(x+1)))
View(nrgprime)
View(messynrgprime)
messynrgprime <- read.xlsx2('~/GitHub/Climate-Happiness/Data/export_land_primary.xlsx', 1, startRow = 4, endRow = 21, colClasses = c(rep('character', x), rep('numeric', ncol(messynrgprime)-(x+1))))
x <- 1
messynrgprime <- read.xlsx2('~/GitHub/Climate-Happiness/Data/export_land_primary.xlsx', 1, startRow = 4, endRow = 21, colClasses = c(rep('character', x), rep('numeric', ncol(messynrgprime)-(x+1))))
View(messynrgprime)
messynrgprime <- read.xlsx('~/GitHub/Climate-Happiness/Data/export_land_primary.xlsx', 1, startRow = 4, endRow = 21)
View(messynrgprime)
?read.xlsx
?data.frame
?read.csv2
?transform
library(dplyr)
library(httr)
library(xlsx)
library(ggplot2)
library(tidyr)
library(repmis)
library(rio)
library(rvest)
URLnrg <- 'http://www.lanuv.nrw.de/liki/index.php?indikator=608&aufzu=1&mode=indi'
# but manually downloaded Excel spreadsheets
messynrgprime <- read.xlsx('~/GitHub/Climate-Happiness/Data/export_land_primary.xlsx', 1, startRow = 4, endRow = 21)
messynrgelec <- read.xlsx('~/GitHub/Climate-Happiness/Data/export_land_strom.xlsx', 1, startRow = 4, endRow = 21)
# convert K.D. (keine Daten) to NA
NAs <- messynrgelec == "K.D."
is.na(messynrgelec)[NAs] <- TRUE
transform(messynrgelec, X1990 = as.numeric(X1990), dec = ",", digits = 5)
for (i in (2:25)) {transform(messynrgelec$[i] X1990 = as.numeric(messynrgelec$[i]), dec = ",", digits = 5)
for (i in (2:25)) {transform(messynrgelec$[i] = as.numeric(messynrgelec$[i]), dec = ",", digits = 5)
for (i in (2:25)) {transform(messynrgelec$[i]) = as.numeric(messynrgelec$[i]), dec = ",", digits = 5
for (i in (2:25)) {transform(messynrgelec$[i]) = as.numeric(messynrgelec$[i]), dec = ",", digits = 5
}
for (i in (2:25)){transform(messynrgelec$[i]) = as.numeric(messynrgelec$[i]), dec = ",", digits = 5}
for (i in (2:25)){transform(messynrgelec[[i]) = as.numeric(messynrgelec[[i]), dec = ",", digits = 5}
for (i in (2:25)){transform(messynrgelec[[i] = as.numeric(messynrgelec[[i]), dec = ",", digits = 5}
for (i in (2:25)){transform(messynrgelec[[i] <- as.numeric(messynrgelec[[i]), dec = ",", digits = 5}
for (i in c(2:25)){transform(messynrgelec[[i] <- as.numeric(messynrgelec[[i]), dec = ",", digits = 5}
for (i in c(2:25)){transform(messynrgelec[[,i] <- as.numeric(messynrgelec[[,i]), dec = ",", digits = 5}
for (i in c(2:25)) {transform(messynrgelec[[,i] <- as.numeric(messynrgelec[[,i]), dec = ",", digits = 5}
for (i in names(messynrgelec)) {(messynrgelec[[,i]) <- as.numeric(messynrgelec[[,i]), dec = ",", digits = 5}
for (i in names(messynrgelec)) {messynrgelec[[,i] <- as.numeric(messynrgelec[[,i]), dec = ",", digits = 5}
? apply
messynrguse <- read.xlsx('~/GitHub/Climate-Happiness/Data/export_land_energyuse.xlsx', 1, startRow = 4, endRow = 21)
messynrguse <- read.xlsx('~/GitHub/Climate-Happiness/Data/export_land_energyuse.xlsx', 1, startRow = 4, endRow = 21)
View(messynrguse)
messynrgprime <- read.xlsx('~/GitHub/Climate-Happiness/Data/export_land_primary.xlsx', 1, startRow = 4, endRow = 21)
library(dplyr)
library(httr)
library(xlsx)
library(ggplot2)
library(tidyr)
library(repmis)
library(rio)
library(rvest)
messynrgprime <- read.xlsx('~/GitHub/Climate-Happiness/Data/export_land_primary.xlsx', 1, startRow = 4, endRow = 21)
messynrgelec <- read.xlsx('~/GitHub/Climate-Happiness/Data/export_land_strom.xlsx', 1, startRow = 4, endRow = 21)
messynrguse <- read.xlsx('~/GitHub/Climate-Happiness/Data/export_land_energyuse.xlsx', 1, startRow = 4, endRow = 21)
View(messynrguse)
NAs2 <- messynrgprime == "K.D."
is.na(messynrgprime)[NAs2] <- TRUE
NAs <- messynrgelec == "K.D."
is.na(messynrgelec)[NAs] <- TRUE
NAs3 <- messynruse == "K.D."
is.na(messynrguse)[NAs3] <- TRUE
NAs3 <- messynrguse == "K.D."
is.na(messynrguse)[NAs3] <- TRUE
View(messynrguse)
tidyNRGprime <- gather(messynrgelec, year, percentrenewable, 2:25, na.rm = FALSE, convert = TRUE)
View(tidyNRGprime)
NRGprime <- gather(messynrgelec, year, percentrenewable, 2:25, na.rm = FALSE, convert = TRUE)
remove(tidyNRGprime)
remove(NRGprime)
NRGprime <- gather(messynrgprime, year, percentrenewable, 2:25, na.rm = FALSE, convert = TRUE)
NRGelec <- gather(messynrgelec, year, percentrenewable, 2:25, na.rm = FALSE, convert = TRUE)
NRGuse <- gather(messynrguse, year, percentrenewable, 2:25, na.rm = FALSE, convert = TRUE)
View(NRGuse)
View(messynrguse)
NRGuse <- gather(messynrguse, year, percentrenewable, 2:26, na.rm = FALSE, convert = TRUE)
# Source file for assignment 3 and final projects
source('~/GitHub/Climate-Happiness/Data/SourceFile.R')
install.packages(car)
install.packages(car)
?install.packages
install.packages('https://cran.r-project.org/bin/windows/contrib/3.2/car_2.1-2.zip', repos=NULL)
source('~/GitHub/Climate-Happiness/Data/SourceFile.R')
install.packages(pbkrtest)
install.packages('https://cran.r-project.org/bin/windows/contrib/3.2/pbkrtest_0.4-6.zip', repos = NULL)
source('~/GitHub/Climate-Happiness/Data/SourceFile.R')
install.packages("plm")
install.packages("psych")
install.packages("xlsxjars")
install.packages("xml2")
install.packages("gsubfn")
source('~/GitHub/Climate-Happiness/Data/SourceFile.R')
install.packages("car")
install.packages(foreign)
install.packages("foreign")
source('~/GitHub/Climate-Happiness/Data/SourceFile.R')
remove.packages('car')
remove.packages('car', C:/Users/Sarah/Documents/R/win-library/3.2)
remove.packages('car', lib = 'C:/Users/Sarah/Documents/R/win-library/3.2')
# Source file for assignment 3 and final projects
# Authors: Katie, Meerim, and Sarah
# load packages
library(dplyr)
library(car) #scatterplots with panel data
library(httr)
library(foreign) #to read .dta files
library(rJava)
library(xlsxjars)
library(xlsx)
library(ggplot2)
library(tidyr) #
library(repmis)
library(rio)
library(xml2)
library(rvest)
library(psych) #multilevel analysis
library(plm) #panel data regression
library(gsubfn) #replacing characters
getwd()
setwd('~/GitHub/Climate-Happiness/Data')
# get data on renewable energy in Bundeslaender
URLnrg <- 'http://www.lanuv.nrw.de/liki/index.php?indikator=608&aufzu=1&mode=indi'
# but manually downloaded Excel spreadsheets
messynrgprime <- read.xlsx("export_land_primary.xlsx", 1, startRow = 4, endRow = 21)
messynrgelec <- read.xlsx("export_land_strom.xlsx", 1, startRow = 4, endRow = 21)
messynrguse <- read.xlsx("export_land_energyuse.xlsx", 1, startRow = 4, endRow = 21)
# convert K.D. (keine Daten) to NA
tidynrguse <- as.data.frame(sapply(messynrguse,
gsub, pattern="K.D.", replacement="."))
tidynrgelec <- as.data.frame(sapply(messynrgelec,
gsub, pattern="K.D.", replacement="."))
tidynrgprime <- as.data.frame(sapply(messynrgprime,
gsub, pattern="K.D.", replacement="."))
# transform to numeric values, need to correct decimal places and loop but major issue: , instead of .
transform(tidynrgelec, X1990 = as.numeric(X1990))
# convert data to tidy format
NRGprime <- gather(tidynrgprime, year, percentrenewable, 2:25, na.rm = FALSE, convert = TRUE)
NRGelec <- gather(tidynrgelec, year, percentrenewable, 2:25, na.rm = FALSE, convert = TRUE)
NRGuse <- gather(tidynrguse, year, percentrenewable, 2:26, na.rm = FALSE, convert = TRUE)
# Matching labels
colnames(NRGelec) <- c("State", "Year", "Elec")
colnames(NRGprime) <- c("State", "Year", "Primary")
colnames(NRGuse) <- c("State", "Year", "Use")
NRG <- merge(NRGprime, NRGelec, by=c("Year","State"))
NRG2 <- merge(NRG, NRGuse, by=c("Year","State"))
NRG.final <- as.data.frame(sapply(NRG2, gsub, pattern="X",replacement=""))
export(NRG.final, file="NRG.final.csv")
### R-script for cleaning and merging excel files for CO2 emissions ###
# 1. Merging files using file name pattern
all_files <- list.files('GitHub/Climate-Happiness/Data', pattern="statistic_id")
all_subbed <- NULL
# 2. Cleaning in a loop
for (i in all_files) {
message(i)
if (grepl(pattern = '.xls$', x = i)) {
message('Skipped')
}
else if (grepl(pattern = '.xlsx', x = i)) {
# Load individual document in to R as a list
temp_all <- read.xlsx(i, sheetIndex=2, header=FALSE)
temp_bundesland <- read.xlsx(i, sheetIndex=2, startRow=3, colIndex=2:2, endRow=3, header=FALSE)
temp_data <- read.xlsx(i, sheetIndex=2, startRow=6, header=FALSE)
# Extract specific cell for the name of the state
names(temp_data) <- c('Year', 'Emissions')
temp_data$State <- paste(temp_bundesland[1,1])
# Bind individual project to main data frame
all_subbed <- rbind(all_subbed, temp_data)}
}
# 3. Save as .csv
# Add file directory as needed
export(all_subbed, file = 'Emissions_cleaned.csv')
# # EXTRA: Cleaning individual file
# data <- read.xlsx2(all_files[3], sheetIndex=2, startRow=6, header=FALSE)
# colnames(data) <- c("Year", "Emissions")
# test <- read.xlsx(all_files[3], sheetIndex=2, startRow=3, colIndex=2:2, endRow=3, header=FALSE)
# data$Bundesland <- paste(test[1,1]) #create a new column with same values for all rows
# 4. Extract missing info on NRW, while also modifying the excel file (see Appendix 1)
library(XML)
all.link <- 'http://www.ugrdl.de/tab34.htm'
Gase.table = readHTMLTable(all.link, header=T, which=1, stringsAsFactors=F)
names(Gase.table) <- c("State", "1990", "1995", "2000", "2005", "2010", "2011", "2011*", "2012")
export(Gase.table, file = 'Gase.csv')
# 5. Merging files
NRW <- read.csv('NRW.csv', header=TRUE) #original file was amended by combining data from "Gase" and "foederal_erneuerbar-Wirtschaft_Datenblatt"
general <- rbind(all_subbed, NRW)
# 6. Cleaning up names
Final <- as.data.frame(sapply(general,
gsub, pattern="Kohlendioxid-Emissionen je Einwohner im |Kohlendioxid-Emissionen je Einwohner in | bis 2012| bis 2010| bis 2011|\\**",replacement=""))
export(Final, file="Emissions_Final.csv") ## has no extra words
## | means "and", //is used for special characteristics such as *
### R-Script for Merging GSOEP, Emissions and Energy files
#1. Tranforming GSOEP dta file to csv for merging
GSOEP = read.dta("SOEP_short12.dta")
#2. And then you simply write it to CSV
write.csv(GSOEP, file = "GSOEP.csv", row.names = FALSE)
#3. Read all files to be merged together
emissions = read.csv("Emissions_Final.csv")
GSOEP = read.csv("GSOEP.csv")
energy = read.csv("NRG.final.csv")
#4. Merge all 3 files together using State and Year as unique IDs
alldata <- merge(emissions,energy,by=c("Year","State"))
finaldata = merge(alldata,GSOEP,by=c("Year","State"))
# Add column, create values for Bundesland code
finaldata$LandCode[finaldata$State == 'Baden-WÃ¼rttemberg'] <- 'BW'
finaldata$LandCode[finaldata$State == 'Bayern'] <- 'BY'
finaldata$LandCode[finaldata$State == 'Berlin'] <- 'BE'
finaldata$LandCode[finaldata$State == 'Brandenburg'] <- 'BB'
finaldata$LandCode[finaldata$State == 'Bremen'] <- 'HB'
finaldata$LandCode[finaldata$State == 'Hamburg'] <- 'HH'
finaldata$LandCode[finaldata$State == 'Hessen'] <- 'HE'
finaldata$LandCode[finaldata$State == 'Mecklenburg-Vorpommern'] <- 'MV'
finaldata$LandCode[finaldata$State == 'Niedersachsen'] <- 'NI'
finaldata$LandCode[finaldata$State == 'Nordrhein-Westfalen'] <- 'NR'
finaldata$LandCode[finaldata$State == 'Saarland'] <- 'SL'
finaldata$LandCode[finaldata$State == 'Sachsen'] <- 'SN'
finaldata$LandCode[finaldata$State == 'Sachsen-Anhalt'] <- 'ST'
finaldata$LandCode[finaldata$State == 'Schleswig-Holstein'] <- 'SH'
finaldata$LandCode[finaldata$State == 'ThÃ¼ringen'] <- 'TH'
# check state/landcode observations
summary(State)
summary(LandCode)
#5. export merged data to single CSV file
export(finaldata, file="All_Merged_Data.csv")
all_subbed <- rbind(all_subbed, temp_data)
temp_all <- read.xlsx(i, sheetIndex=2, header=FALSE)
for (i in all_files) {
message(i)
if (grepl(pattern = '.xls$', x = i)) {
message('Skipped')
}
else if (grepl(pattern = '.xlsx', x = i)) {
# Load individual document in to R as a list
temp_all <- read.xlsx(i, sheetIndex=2, header=FALSE)
temp_bundesland <- read.xlsx(i, sheetIndex=2, startRow=3, colIndex=2:2, endRow=3, header=FALSE)
temp_data <- read.xlsx(i, sheetIndex=2, startRow=6, header=FALSE)
# Extract specific cell for the name of the state
names(temp_data) <- c('Year', 'Emissions')
temp_data$State <- paste(temp_bundesland[1,1])
# Bind individual project to main data frame
all_subbed <- rbind(all_subbed, temp_data)
}
}
all_files <- list.files(pattern="statistic_id")
all_subbed <- NULL
# 2. Cleaning in a loop
for (i in all_files) {
message(i)
if (grepl(pattern = '.xls$', x = i)) {
message('Skipped')
}
else if (grepl(pattern = '.xlsx', x = i)) {
# Load individual document in to R as a list
temp_all <- read.xlsx(i, sheetIndex=2, header=FALSE)
temp_bundesland <- read.xlsx(i, sheetIndex=2, startRow=3, colIndex=2:2, endRow=3, header=FALSE)
temp_data <- read.xlsx(i, sheetIndex=2, startRow=6, header=FALSE)
# Extract specific cell for the name of the state
names(temp_data) <- c('Year', 'Emissions')
temp_data$State <- paste(temp_bundesland[1,1])
# Bind individual project to main data frame
all_subbed <- rbind(all_subbed, temp_data)
}
}
# 3. Save as .csv
# Add file directory as needed
export(all_subbed, file = 'Emissions_cleaned.csv')
source('~/GitHub/Climate-Happiness/Data/SourceFile.R')
